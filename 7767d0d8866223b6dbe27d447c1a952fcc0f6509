{
  "comments": [
    {
      "key": {
        "uuid": "13dfb229_1172ddcc",
        "filename": "src/bindings/rmr-python/tests/test_rmr.py",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2019-10-01T13:06:52Z",
      "side": 1,
      "message": "I think a better way to do this would be to add this into the tox, please. That would open the door for multiple test envs where this is and is not set; not that we are using that yet. Please punt this over to tox.ini",
      "revId": "7767d0d8866223b6dbe27d447c1a952fcc0f6509",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d566e796_77e939b3",
        "filename": "src/bindings/rmr-python/tests/test_rmr.py",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000037
      },
      "writtenOn": "2019-10-01T13:19:36Z",
      "side": 1,
      "message": "Oh, I didn\u0027t even think about being able to set environment there.  I tried from the command line initially, which failed, but it never dawned on me that there\u0027d be a setup file for such things.",
      "parentUuid": "13dfb229_1172ddcc",
      "revId": "7767d0d8866223b6dbe27d447c1a952fcc0f6509",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc5561d4_68f6ab1d",
        "filename": "src/bindings/rmr-python/tests/test_rmr.py",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000037
      },
      "writtenOn": "2019-10-01T20:12:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d566e796_77e939b3",
      "revId": "7767d0d8866223b6dbe27d447c1a952fcc0f6509",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "babc600a_d4d2c37c",
        "filename": "src/bindings/rmr-python/tests/test_rmr.py",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2019-10-01T13:06:52Z",
      "side": 1,
      "message": "embarrassing!\ni would turn spell back on in vim. but it drives me nuts underlining programming keywords by default. I\u0027m gonna have to find a solution for that",
      "revId": "7767d0d8866223b6dbe27d447c1a952fcc0f6509",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e596e7_ea636d1c",
        "filename": "src/bindings/rmr-python/tests/test_rmr.py",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000037
      },
      "writtenOn": "2019-10-01T13:19:36Z",
      "side": 1,
      "message": "I am the world\u0027s worst speller, and I don\u0027t like the correct on the fly for reasons you\u0027ve mentioned.  Usually I don\u0027t notice, and I\u0027ve never thought it all that important to have every t crossed in comments. I only found this because I was searching for \"received\" in the message string which wasn\u0027t hitting.  I had to go look it up to be sure that my I before E except after C rule really applied and that I wasn\u0027t wrong.",
      "parentUuid": "babc600a_d4d2c37c",
      "revId": "7767d0d8866223b6dbe27d447c1a952fcc0f6509",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59b3d530_77b6cf58",
        "filename": "src/bindings/rmr-python/tests/test_rmr.py",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000037
      },
      "writtenOn": "2019-10-01T20:12:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8e596e7_ea636d1c",
      "revId": "7767d0d8866223b6dbe27d447c1a952fcc0f6509",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    }
  ]
}