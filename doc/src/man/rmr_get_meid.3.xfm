.if false
==================================================================================
	Copyright (c) 2019 Nokia 
	Copyright (c) 2018-2019 AT&T Intellectual Property.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
==================================================================================
.fi

.if false
	Mnemonic	rmr_get_meid.xfm
	Abstract	The manual page for the rmr_get_meid function.
	Author		E. Scott Daniels
	Date		8 March 2019
.fi

.gv e LIB lib
.im &{lib}/man/setup.im 

&line_len(6i)

&h1(RMR Library Functions)
&h2(NAME)
	rmr_get_meid

&h2(SYNOPSIS)
&indent
&ex_start
#include <rmr/rmr.h>

char* rmr_get_meid( rmr_mbuf_t* mbuf, unsigned char* dest )
&ex_end

&uindent

&h2(DESCRIPTION)
The &cw(rmr_get_meid) function will copy the managed equipment ID (meid) field from the message
into the &ital(dest) buffer provided by the user.  
The buffer referenced by &ital(dest) is assumed to be at least &cw(RMR_MAX_MEID) bytes in length.
If &ital(dest) is NULL, then a buffer is allocated (the calling application is expected
to free when the buffer is no longer needed).

&h2(RETURN VALUE)
On success, a pointer to the extracted string is returned. 
If &ital(dest) was supplied, then this is just a pointer to the caller's buffer.
If &ital(dest) was NULL, this is a pointer to the allocated buffer.
If an error occurs, a nil pointer is returned and errno is set as described below.

&h2(ERRORS)
If an error occurs, the value of the global variable &cw(errno) will be set to one of 
the following with the indicated meaning.

&beg_dlist(.75i : ^&bold_font )
&half_space
&di(EINVAL) The message, or an internal portion of the message, was corrupted or the pointer was invalid.

&half_space
&di(ENOMEM) A nil pointer was passed for &ital(dest,) however it was not possible to allocate a 
	buffer using malloc().
&end_dlist



&h2(SEE ALSO )
.ju off
rmr_alloc_msg(3),
rmr_bytes2xact(3),
rmr_bytes2meid(3),
rmr_call(3),
rmr_free_msg(3),
rmr_get_rcvfd(3),
rmr_get_xact(3),
rmr_payload_size(3),
rmr_send_msg(3),
rmr_rcv_msg(3),
rmr_rcv_specific(3),
rmr_rts_msg(3),
rmr_ready(3),
rmr_fib(3),
rmr_has_str(3),
rmr_tokenise(3),
rmr_mk_ring(3),
rmr_ring_free(3),
rmr_str2meid(3),
rmr_str2xact(3),
rmr_wh_open(3),
rmr_wh_send_msg(3)
.ju on

