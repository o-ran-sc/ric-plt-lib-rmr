.if false
==================================================================================
	Copyright (c) 2019 Nokia
	Copyright (c) 2018-2019 AT&T Intellectual Property.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
==================================================================================
.fi

.if false
	Mnemonic	rmr_get_srcip.xfm
	Abstract	The manual page for the rmr_get_srcip function.
	Author		E. Scott Daniels
	Date		11 June 2019
.fi

.gv e LIB lib
.im &{lib}/man/setup.im 

&line_len(6i)

&h1(RMR Library Functions)
&h2(NAME)
	rmr_get_srcip

&h2(SYNOPSIS)
&indent
&ex_start
#include <rmr/rmr.h>

unsigned char* rmr_get_srcip( rmr_mbuf_t* mbuf, unsigned char* dest )
&ex_end

&uindent

&h2(DESCRIPTION)
The &cw(rmr_get_srcip) function will copy the &ital(source IP address) from the message to a buffer
(dest) supplied by the user.
In an RMr message, the source IP address is the sender's information that is used for return to sender
function calls;  this function makes it available to the user application. 
The address is maintained as IP:port where &ital(IP) could be either an IPv6 or IPv4 address depending
on what was provided by the sending application.
.sp

The maximum size allowed by RMr is 64 bytes (including the nil string terminator), so the user
must ensure that the destination buffer given is at least 64 bytes. The user application should use 
the RMr constant RMR_MAX_SRC to ensure that the buffer supplied is large enough, and to protect
against future RMr enhancements which might increase the address buffer size requirement.

&h2(RETURN VALUE)
On success, a pointer to the destination buffer is given as a convenience to the user programme.
On failure, a nil pointer is returned and the value of errno is set.

&h2(ERRORS)
If an error occurs, the value of the global variable &cw(errno) will be set to one of
the following with the indicated meaning.

&beg_dlist(.75i : ^&bold_font )
&half_space
&di(EINVAL) The message, or an internal portion of the message, was corrupted or the pointer was invalid.
&end_dlist



&h2(SEE ALSO )
.ju off
rmr_alloc_msg(3),
rmr_bytes2xact(3),
rmr_bytes2meid(3),
rmr_call(3),
rmr_free_msg(3),
rmr_get_rcvfd(3),
rmr_get_src(3),
rmr_payload_size(3),
rmr_send_msg(3),
rmr_rcv_msg(3),
rmr_rcv_specific(3),
rmr_rts_msg(3),
rmr_ready(3),
rmr_fib(3),
rmr_has_str(3),
rmr_tokenise(3),
rmr_mk_ring(3),
rmr_ring_free(3),
rmr_str2meid(3),
rmr_str2xact(3),
rmr_wh_open(3),
rmr_wh_send_msg(3)
.ju on

