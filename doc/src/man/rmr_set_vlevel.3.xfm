.if false
==================================================================================
	Copyright (c) 2019-2020 Nokia 
	Copyright (c) 2018-2020 AT&T Intellectual Property.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
==================================================================================
.fi

.if false
	Mnemonic	rmr_set_vlevel.3.xfm
	Abstract	The manual page for the function which sets the verbosity level
				in RMR logging.
	Author		E. Scott Daniels
	Date		28 January 2020
.fi

.gv e LIB lib
.im &{lib}/man/setup.im 

&line_len(6i)

&h1(RMR Library Functions)
&h2(NAME)
	rmr_set_vlevel

&h2(SYNOPSIS)
&indent
&ex_start
#include <rmr/rmr.h>
#include <rmr/rmr_logging.h>

void rmr_set_vlevel( int new_level )
&ex_end

&uindent

&h2(DESCRIPTION)
The &cw(rmr_set_vlevel) allows the user programme to set the verbosity level 
which is used to determine the messages RMR writes to standard error.
The &cw(new_vlevel) value must be one of the following constants which have the 
indicated meanings:

&beg_dlist(1i : &bold_font )
&ditem(RMR_VL_OFF) 
	Turns off all message writing. This includes the stats and debugging messages generated by the 
	route collector thread which are normally affected only by the externally managed verbose
	level file (and related environment variable). 
&half_space

&ditem(RMR_VL_CRIT) 
	Write only messages of critical importance. 
	From the point of view of RMR, when a critical proper behaviour of the library cannot be 
	expected or guaranteed.

&ditem(RMR_VL_ERR) 
	Include error messages in the output.
	An error is an event from which RMR has no means to recover. 
	Continued proper execution is likely except where the affected connection and/or component
	mentioned in the error is concerned.

&ditem(RMR_VL_WARN) 
	Include warning messages in the output.
	A warning indicates an event which is not considered to be normal, but is expected and
	continued acceptable behaviour of the system is assured.

&ditem(RMR_VL_INFO) 
	Include informational messagees in the output.
	Informational messages include some diagnostic information which explain the activities
	of RMR.

&ditem(RMR_VL_DEBUG) 
	Include all debugging messages in the output.
	Debugging must have also been enabled during the build as a precaution to accidentally
	enabling this level of output as it can grossly affect performance.
&end_dlist
&space

Generally RMR does not write messages to the standard error device from &ital(critical path)
functions, therefore it is usually not harmful to enable a verbosity level of either RMR_VL_CRIT or RMR_VL_ERR.

&space
Messages written from the route table collection thread are still governed by the value placed
into the verbose level control file (see the man page for rmr_init()); those messages are affected
only when logging is completely disabled by passing RMR_VL_OFF to this function. 

&space
The verbosity level can also be set via an environment variable prior to the start of the 
RMR based application.
The environment variable is read only during initialisation; if the programme must change
the value during execution, this function must be used.
The default value, if this function is never called, and the environment variable is not
present, is RMR_VL_ERR.

&h2(SEE ALSO )
.ju off
rmr_init(3)
.ju on
